#include<stdio.h>
#include<queue>
using namespace std;
char a[101][101];
bool mark[101][101];
int imark1,jmark1,imark2,jmark2;
int go[][2]={1,0,-1,0,0,1,0,-1};
struct point{
	int x,y;
	int t;
};
queue<point>Q;
int dfs(int n,int m)
{
	int i;
	while(Q.empty()==false)
	{
		point now=Q.front();
	    Q.pop();
		for(i=0;i<4;i++)
    	{
			int nx=now.x+go[i][0];
			int ny=now.y+go[i][1];
	    	if(nx<0||nx>=n||ny<0||ny>=m) continue;
	    	if(mark[nx][ny]==true) continue;
		    if(a[nx][ny]=='#') continue;
		    point tmp;
			tmp.x=nx;
			tmp.y=ny;
			tmp.t=now.t+1;
			Q.push(tmp);
			mark[nx][ny]=true;
			if(nx==imark2&&ny==jmark2) return tmp.t;
		}
	}
   	return -1; 
}
void main()
{
	int m,n;
	while(scanf("%d%d",&n,&m)!=EOF)
	{
		int i,j;
		while(Q.empty()==false) Q.pop();
		for(i=0;i<n;i++)
		{
			scanf("%s",a[i]);
		}
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				mark[i][j]=false;
			}
		}
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(a[i][j]=='S')
				{
					imark1=i;
					jmark1=j;
				}
			}
		}
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(a[i][j]=='T')
				{
					imark2=i;
					jmark2=j;
				}
			}
		}
		point tmp;
		tmp.x=imark1;
		tmp.y=jmark1;
		tmp.t=0;
		Q.push(tmp);
		mark[imark1][jmark1]=true;
		int count=dfs(n,m);
		printf("%d",count);
	}
}
