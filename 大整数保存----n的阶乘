#include<stdio.h>
struct biginteger{
	int digit[1000];
	int size;
	void init()
	{
		int i;
		for(i=0;i<1000;i++) digit[i]=0;
		size=0;
	}
	void set(int x)
	{
		init();
		while(x>0)
		{
			digit[size++]=x%10000;
			x/=10000;
		}
	}
	void output()
	{
		int i;
		for(i=size-1;i>=0;i--)
		{
			if(i!=size-1) printf("%4d",digit[i]);
			else printf("%d",digit[i]);
		}
	}
	biginteger operator *(int a) const{
		biginteger r;
		r.init();
		int i=0,k=0;
		while(digit[i]>0)
		{
			r.digit[i]=(digit[i]*a+k)%10000;
			k=(digit[i]*a+k)/10000;
			i++;
		}
		if(k!=0) r.digit[i++]=k;
		r.size=i;
		return r;
	}
}a;
void main()
{
	int n,i;
	while(scanf("%d",&n)!=EOF)
	{
		a.set(1);
		for(i=1;i<=n;i++)
		{
			a=a*i;
		}
		a.output();
	}
}
