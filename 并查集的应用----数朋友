#include<stdio.h>
int tree[10000000];
int hash[10000000];
int findroot(int x)
{
	if(tree[x]==-1) return x;
	else
	{
		int tmp=findroot(tree[x]);
		tree[x]=tmp;
		return tmp;
	}
}
void main()
{
	int n;
	while(scanf("%d",&n)!=EOF)
	{
		int i;
		for(i=1;i<10000000;i++)
		{
			tree[i]=-1;
		}
		for(i=1;i<10000000;i++)
		{
			hash[i]=0;
		}
		while(n--)
		{
			int a,b;
			scanf("%d%d",&a,&b);
			a=findroot(a);
			b=findroot(b);
			if(a!=b) tree[b]=a;
		}
		int ans=0;
		for(i=1;i<10000000;i++)
		{
			if(tree[i]!=-1)
			{
				hash[findroot(tree[i])]++;
			}
		}
		int temp=0;
		for(i=1;i<10000000;i++)
		{
			if(hash[i]>temp)
			{
				temp=hash[i];
			}
		}
		printf("%d",temp+1);
	}
}
